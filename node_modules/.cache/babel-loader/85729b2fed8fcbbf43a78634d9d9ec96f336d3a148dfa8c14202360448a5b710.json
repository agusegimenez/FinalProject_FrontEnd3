{"ast":null,"code":"import React,{useContext,useEffect}from'react';import Card from'../Components/Card';import{ContextGlobal}from'../Components/utils/global.context';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const{state}=useContext(ContextGlobal);useEffect(()=>{},[]);return/*#__PURE__*/_jsxs(\"main\",{className:state.theme===\"dark\"?\"dark\":\"\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Home\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card-grid\",children:state.data.map(dentist=>/*#__PURE__*/_jsx(Card,{...dentist},dentist.id))})]});};export default Home;","map":{"version":3,"names":["React","useContext","useEffect","Card","ContextGlobal","jsx","_jsx","jsxs","_jsxs","Home","state","className","theme","children","data","map","dentist","id"],"sources":["C:/DH/Front 3/fe3-final/src/Routes/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport Card from '../Components/Card';\nimport { ContextGlobal } from '../Components/utils/global.context';\n\nconst Home = () => {\n  const { state } = useContext(ContextGlobal);\n\n  useEffect(() => {\n  }, []);\n\n  return (\n    <main className={state.theme === \"dark\" ? \"dark\" : \"\"}>\n      <h1>Home</h1>\n      <div className='card-grid'>\n        {state.data.map(dentist => (\n          <Card key={dentist.id} {...dentist} />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CACpD,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,OAASC,aAAa,KAAQ,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnE,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAAEC,KAAM,CAAC,CAAGT,UAAU,CAACG,aAAa,CAAC,CAE3CF,SAAS,CAAC,IAAM,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEM,KAAA,SAAMG,SAAS,CAAED,KAAK,CAACE,KAAK,GAAK,MAAM,CAAG,MAAM,CAAG,EAAG,CAAAC,QAAA,eACpDP,IAAA,OAAAO,QAAA,CAAI,MAAI,CAAI,CAAC,cACbP,IAAA,QAAKK,SAAS,CAAC,WAAW,CAAAE,QAAA,CACvBH,KAAK,CAACI,IAAI,CAACC,GAAG,CAACC,OAAO,eACrBV,IAAA,CAACH,IAAI,KAAsBa,OAAO,EAAvBA,OAAO,CAACC,EAAkB,CACtC,CAAC,CACC,CAAC,EACF,CAAC,CAEX,CAAC,CAED,cAAe,CAAAR,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}